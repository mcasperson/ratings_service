name: Publish Docker image

on:
  push:
  workflow_dispatch:

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: 5.x

      - name: Install CycloneDX
        run: npm install --global @cyclonedx/cyclonedx-npm
        shell: bash

      - name: NPM install
        run: npm install
        shell: bash

      # This step generates a Source Bill of Materials (SBOM) package that captures all the dependencies compiled
      # into the application.
      - name: Generate SBOM
        run: cyclonedx-npm --ignore-npm-errors --output-file bom.json
        shell: bash

      - id: determine_version
        name: Determine Version
        uses: gittools/actions/gitversion/execute@v0.9.15
        with:
          additionalArguments: /overrideconfig mode=Mainline

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          # To log into a third party registry, set the registry key below.

          # This is the GitHub Container Registry
          #registry: ghcr.io

          # This is GitLab
          #registry: registry.gitlab.com

          # This is the Azure Container Registry
          #registry: <registry-name>.azurecr.io

          # This is the Google Container Registry
          #registry: gcr.io

          # These credentials assume existing secrets for DockerHub
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          # Change this to "true" when you are sure the tag is unique. It is set to false
          # to ensure that existing images are not overwritten unintentionally.
          push: true
          tags: octopussamples/ratings_service:${{ steps.determine_version.outputs.semVer }}

       # Using feed triggers is preferable to manually creating releases.

#      - name: Install Octopus Deploy CLI
#        uses: OctopusDeploy/install-octopus-cli-action@v1
#        with:
#          version: latest

#      - name: Create Octopus Release
#        uses: OctopusDeploy/create-release-action@v3
#        env:
#          OCTOPUS_API_KEY: "${{ secrets.OCTOPUS_API_TOKEN }}"
#          OCTOPUS_URL: "https://mattc.octopus.app"
#          OCTOPUS_SPACE: "Youi"
#        with:
#          project: "EKS Ratings Service"
